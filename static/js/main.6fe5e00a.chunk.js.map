{"version":3,"sources":["Comp/Converter.js","App.js","reportWebVitals.js","index.js"],"names":["Converter","props","onChange","e","value","target","setState","prevState","moedaA_valor","state","moedaB_valor","valorx","valory","Convert","bind","console","log","this","from_to","url","fetch","then","res","json","cota","val","parseFloat","toFixed","className","type","event","onKeyUp","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+QAIqBA,E,kDACjB,WAAYC,GAAO,IAAD,8BACd,cAAMA,IA+BVC,SAAW,SAACC,GAAO,IACPC,EAAUD,EAAEE,OAAZD,MACR,EAAKE,UAAS,SAAAC,GACZ,MAAO,CAAEC,aAAcJ,OAhCzB,EAAKK,MAAQ,CACTD,aAAe,GACfE,aAAc,EACdC,OAAQ,MACRC,OAAQ,OAGZ,EAAKC,QAAU,EAAKA,QAAQC,KAAb,gBAVD,E,2CAalB,WAAU,IAAD,OACLC,QAAQC,IAAIC,KAAKR,OACjB,IAAIS,EAAQ,GAAD,OAAID,KAAKR,MAAME,OAAf,YAAyBM,KAAKR,MAAMG,QAC3CO,EAAG,qDAAgDD,EAAhD,0CAEPE,MAAMD,GACLE,MAAK,SAAAC,GAEF,OAAOA,EAAIC,UAGdF,MAAK,SAAAE,GACF,IAAIC,EAAMD,EAAKL,GAASO,IACpBf,EAAegB,WAAW,EAAKjB,MAAMD,aAAegB,GAAOG,QAAQ,GACvE,EAAKrB,SAAS,CAACI,sB,oBAYvB,WAAS,IAAD,OACJ,OACI,qBAAKkB,UAAU,OAAf,SACI,sBAAKA,UAAU,OAAf,UACE,6BAAKX,KAAKR,MAAMC,eAClB,+BAAKO,KAAKR,MAAME,OAAhB,iBAA4BM,KAAKR,MAAMG,UACvC,yBAAQiB,KAAK,SAASzB,MAAOa,KAAKR,MAAME,OAAQT,SAAU,SAAC4B,GAAD,OAAU,EAAKxB,SAAS,CAACK,OAAOmB,EAAMzB,OAAOD,SAAvG,UACI,yCACA,yCACA,yCACA,4CAEJ,uBAAOyB,KAAK,OAAO3B,SAAUe,KAAKf,SAAUE,MAAOa,KAAKR,MAAMD,aAAcuB,QAASd,KAAKJ,UAE1F,yBAAQgB,KAAK,SAASzB,MAAOa,KAAKR,MAAMG,OAAQV,SAAW,SAAC4B,GAAD,OAAU,EAAKxB,SAAS,CAACM,OAAOkB,EAAMzB,OAAOD,SAAxG,UACI,yCACA,yCACA,yCACA,qD,GA1DmB4B,aCSxBC,MAVf,WACE,OACE,qBAAKL,UAAU,MAAf,SACE,cAAC,EAAD,OCMSM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.6fe5e00a.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Component } from 'react';\r\nimport './Converter.css';\r\n\r\nexport default class Converter extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            moedaA_valor : \"\",\r\n            moedaB_valor: 0,\r\n            valorx: \"USD\",\r\n            valory: \"BRL\"\r\n        }\r\n    \r\n        this.Convert = this.Convert.bind(this);\r\n    }\r\n    \r\n    Convert(){\r\n        console.log(this.state);\r\n        let from_to=`${this.state.valorx}_${this.state.valory}`;\r\n        let url =`https://free.currconv.com/api/v7/convert?q=${from_to}&compact=y&apiKey=88b08b70098a7f505e95`;\r\n    \r\n        fetch(url)\r\n        .then(res=>{\r\n\r\n            return res.json();\r\n\r\n        })\r\n        .then(json=>{\r\n            let cota =json[from_to].val;\r\n            let moedaB_valor =(parseFloat(this.state.moedaA_valor * cota)).toFixed(2)\r\n            this.setState({moedaB_valor});\r\n        })\r\n        \r\n    }\r\n\r\n    onChange = (e) => {\r\n        const { value } = e.target;\r\n        this.setState(prevState => {\r\n          return { moedaA_valor: value}\r\n      })\r\n    }\r\n \r\n    render(){\r\n        return(\r\n            <div className=\"conv\">\r\n                <div className=\"xugo\">\r\n                  <h2>{this.state.moedaB_valor}</h2>\r\n                <h2>{this.state.valorx} ➡️ {this.state.valory}</h2>\r\n                <select type=\"select\" value={this.state.valorx} onChange={(event)=>(this.setState({valorx:event.target.value}))}>\r\n                    <option>USD</option>\r\n                    <option>AOA</option>\r\n                    <option>BRL</option>\r\n                    <option>EUR</option>\r\n                </select>\r\n                <input type=\"text\" onChange={this.onChange} value={this.state.moedaA_valor} onKeyUp={this.Convert}>\r\n                </input>\r\n                <select type=\"select\" value={this.state.valory} onChange={((event)=>(this.setState({valory:event.target.value})))}>\r\n                    <option>USD</option>\r\n                    <option>AOA</option>\r\n                    <option>BRL</option>\r\n                    <option>EUR</option>\r\n                </select>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n\r\n\r\n\r\n}","import './App.css';\nimport Converter from './Comp/Converter';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Converter>\n\n      </Converter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}